{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortBy","setSortBy","isReversed","setIsReversed","sortedGoods","goods","sort","good1","good2","ALPHABETICAL","localeCompare","LENGTH","length","reverse","sortGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,4BAAAA,E,gBAAAA,E,SAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAA4BC,mBAASH,EAASI,MAA9C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAhCR,SACEC,EADF,GAGa,IADTL,EACQ,EADRA,OAAQE,EACA,EADAA,WAEJE,EAAW,YAAOC,GAqBxB,OAnBIL,GACFI,EAAYE,MAAK,SAACC,EAAOC,GACvB,OAAQR,GACN,KAAKL,EAASc,aACZ,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAASgB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXV,GACFE,EAAYS,UAGPT,EAOaU,CAClBlB,EACA,CAAEI,SAAQE,eAQZ,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYjB,IAAWL,EAASc,eAEpCS,QAAS,kBAAMjB,EAAUN,EAASc,eAPpC,iCAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYjB,IAAWL,EAASgB,SAEpCO,QAAS,kBAAMjB,EAAUN,EAASgB,SAPpC,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAaf,IAEjBgB,QAAS,kBAAMf,GAAeD,IAPhC,sBAYEF,GAAUE,IACV,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAhDW,WACnBjB,EAAUN,EAASI,MACnBI,GAAc,IA2CR,sBAUJ,6BACGC,EAAYe,KAAI,SAAAC,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCxHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.74d46e50.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  ALPHABETICAL = 'alphabetical',\n  LENGTH = 'length',\n  NONE = '',\n}\n\ninterface SortParameters {\n  sortBy: SortType;\n  isReversed: boolean;\n}\n\nfunction sortGoods(\n  goods: string[],\n  { sortBy, isReversed }: SortParameters,\n): string[] {\n  const sortedGoods = [...goods];\n\n  if (sortBy) {\n    sortedGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SortType.ALPHABETICAL:\n          return good1.localeCompare(good2);\n\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortedGoods = sortGoods(\n    goodsFromServer,\n    { sortBy, isReversed },\n  );\n\n  const resetSorting = () => {\n    setSortBy(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortBy !== SortType.ALPHABETICAL },\n          )}\n          onClick={() => setSortBy(SortType.ALPHABETICAL)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortBy !== SortType.LENGTH },\n          )}\n          onClick={() => setSortBy(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetSorting}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}